{"ast":null,"code":"import { AccountService } from 'libs/shared/services/src/lib/account.service';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"libs/shared/services/src/lib/account.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction AccountSummaryComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\")(2, \"a\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const account_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"/account/\", account_r1.id, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(account_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r1.balance);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r1.currency);\n  }\n}\n\nexport class AccountSummaryComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.accounts$ = of([]);\n    this.accounts = [];\n    this.accountsFilter = '';\n  }\n\n  ngOnInit() {\n    this.accountService.getAccounts().subscribe(accounts => {\n      this.accounts = accounts;\n    });\n  } // ngOnInit(): void {\n  //   this.getAccounts();\n  // }\n  // //Use of async call #TODO 10 and observables #TODO 11\n  // async getAccounts(){\n  //   await this.accountService.getAccounts().subscribe((accounts) => {\n  //     this.accounts = accounts;\n  //   });\n  // } \n\n\n  filterAccounts(accounts) {\n    return accounts.filter(acc => acc.currency === this.accountsFilter || this.accountsFilter === '');\n  }\n\n}\n\nAccountSummaryComponent.ɵfac = function AccountSummaryComponent_Factory(t) {\n  return new (t || AccountSummaryComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n};\n\nAccountSummaryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountSummaryComponent,\n  selectors: [[\"sum-account-summary\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[1, \"table\", \"table-striped\"], [\"scope\", \"col\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [\"value\", \"cad\"], [\"value\", \"usd\"], [4, \"ngFor\", \"ngForOf\"], [3, \"href\"]],\n  template: function AccountSummaryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Account Summary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\", 1);\n      i0.ɵɵtext(6, \"Account Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 1);\n      i0.ɵɵtext(8, \"Balance\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 1);\n      i0.ɵɵtext(10, \"Account Type \");\n      i0.ɵɵelementStart(11, \"select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function AccountSummaryComponent_Template_select_ngModelChange_11_listener($event) {\n        return ctx.accountsFilter = $event;\n      });\n      i0.ɵɵelementStart(12, \"option\", 3);\n      i0.ɵɵtext(13, \"None\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"option\", 4);\n      i0.ɵɵtext(15, \"CAD\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"option\", 5);\n      i0.ɵɵtext(17, \"USD\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(18, \"tbody\");\n      i0.ɵɵtemplate(19, AccountSummaryComponent_tr_19_Template, 8, 4, \"tr\", 6);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.accountsFilter);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filterAccounts(ctx.accounts));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"th[scope=col][_ngcontent-%COMP%] {\\n  border-bottom: 1px solid #333;\\n}\\n\\ntr[_ngcontent-%COMP%]:nth-child(2n) {\\n  background-color: #DEDEDE;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQtc3VtbWFyeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLDZCQUFBO0FBREY7O0FBSUE7RUFDRSx5QkFBQTtBQURGIiwiZmlsZSI6ImFjY291bnQtc3VtbWFyeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG50aFtzY29wZT0nY29sJ10ge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzMzMztcbn1cblxudHI6bnRoLWNoaWxkKDJuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNERURFREU7XG59Il19 */\"]\n});","map":{"version":3,"mappings":"AAMA,SAASA,cAAT,QAA+B,8CAA/B;AACA,SAAqBC,EAArB,QAA+B,MAA/B;;;;;;;;ICaIC,2BAAqD,CAArD,EAAqD,IAArD,EAAqD,CAArD,EAAqD,GAArD,EAAqD,CAArD;IAEwCA;IAAcA;IAGpDA;IAAIA;IAAmBA;IACvBA;IAAIA;IAAoBA;;;;;IAJjBA;IAAAA;IAA+BA;IAAAA;IAGlCA;IAAAA;IACAA;IAAAA;;;;ADZV,OAAM,MAAOC,uBAAP,CAA8B;EAElCC,YAAoBC,cAApB,EAAkD;IAA9B;IADpB,iBAAmCJ,EAAE,CAAC,EAAD,CAArC;IAEA,gBAAsB,EAAtB;IACA,sBAAiB,EAAjB;EAFsD;;EAItDK,QAAQ;IACN,KAAKD,cAAL,CAAoBE,WAApB,GAAkCC,SAAlC,CAA6CC,QAAD,IAAa;MACvD,KAAKA,QAAL,GAAgBA,QAAhB;IACD,CAFD;EAGD,CAViC,CAYlC;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;;;EAEAC,cAAc,CAACD,QAAD,EAAoB;IAChC,OAAOA,QAAQ,CAACE,MAAT,CAAgBC,GAAG,IAAIA,GAAG,CAACC,QAAJ,KAAiB,KAAKC,cAAtB,IAAwC,KAAKA,cAAL,KAAwB,EAAvF,CAAP;EACD;;AA1BiC;;;mBAAvBX,yBAAuBD;AAAA;;;QAAvBC;EAAuBY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCdpCjB;MAAIA;MAAeA;MAInBA,iCAAmC,CAAnC,EAAmC,OAAnC,EAAmC,CAAnC,EAAmC,IAAnC,EAAmC,CAAnC,EAAmC,IAAnC,EAAmC,CAAnC;MAGsBA;MAAYA;MAC5BA;MAAgBA;MAAOA;MACvBA;MAAgBA;MACdA;MAAQA;QAAA;MAAA;MACNA;MAAiBA;MAAIA;MACrBA;MAAoBA;MAAGA;MACvBA;MAAoBA;MAAGA;MAM/BA;MACEA;MASFA;;;;MAnBcA;MAAAA;MAUYA;MAAAA","names":["AccountService","of","i0","AccountSummaryComponent","constructor","accountService","ngOnInit","getAccounts","subscribe","accounts","filterAccounts","filter","acc","currency","accountsFilter","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\dhanr\\Angular-FIX-master\\libs\\feature\\account-summary\\src\\lib\\account-summary\\account-summary.component.ts","C:\\Users\\dhanr\\Angular-FIX-master\\libs\\feature\\account-summary\\src\\lib\\account-summary\\account-summary.component.html"],"sourcesContent":["/** \n * TODO: 10. Asynchronous Programming (RxJS)\n * TODO: 13. Angular (NX) Architecture\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { Account } from 'libs/shared/services/src/lib/account';\nimport { AccountService } from 'libs/shared/services/src/lib/account.service';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'sum-account-summary',\n  templateUrl: './account-summary.component.html',\n  styleUrls: ['./account-summary.component.scss'],\n})\nexport class AccountSummaryComponent implements OnInit {\n  accounts$: Observable<Account[]> = of([]);\n  constructor(private accountService: AccountService) {}\n  accounts: Account[] = [];\n  accountsFilter = '';\n\n  ngOnInit(): void {\n    this.accountService.getAccounts().subscribe((accounts) => {\n      this.accounts = accounts;\n    });\n  }\n\n  // ngOnInit(): void {\n  //   this.getAccounts();\n  // }\n\n  // //Use of async call #TODO 10 and observables #TODO 11\n  // async getAccounts(){\n\n  //   await this.accountService.getAccounts().subscribe((accounts) => {\n  //     this.accounts = accounts;\n  //   });\n  // } \n\n  filterAccounts(accounts: Account[]) {\n    return accounts.filter(acc => acc.currency === this.accountsFilter || this.accountsFilter === '');\n  }\n}\n","<h1>Account Summary</h1>\n<!-- TODO: 6. Angular ngFor, refactor, and bonus points -->\n<!-- TODO: 7. Accessibility, table markup, form control -->\n\n<table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Account Name</th>\n      <th scope=\"col\">Balance</th>\n      <th scope=\"col\">Account Type\n        <select [(ngModel)]=\"accountsFilter\">\n          <option value=\"\">None</option>\n          <option value=\"cad\">CAD</option>\n          <option value=\"usd\">USD</option>\n        </select>\n      </th>\n    \n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let account of filterAccounts(accounts)\">\n      <!-- TODO: 8. route to detail view -->\n      <th><a href=\"/account/{{account.id}}\">{{account.id}}</a></th>\n      <!-- <th><a [routerLink]=\"['/account',account.id]\">{{account.id}}</a></th> -->\n      \n      <td>{{account.balance}}</td>\n      <td>{{account.currency}}</td>\n    </tr>\n   \n  </tbody>\n</table>\n\n\n<!-- <div class=\"account-summary\">\n  <section>\n    <table>\n      <tr>\n        <th scope=\"col\">Account Name</th>\n        <th scope=\"col\">Balance</th>\n        <th scope=\"col\">\n          <label>Account Type</label>\n          <select [(ngModel)]=\"accountsFilter\">\n            <option value=\"\">None</option>\n            <option value=\"cad\">CAD</option>\n            <option value=\"usd\">USD</option>\n          </select>\n        </th>\n      </tr>\n      <tr *ngFor=\"let account of filterAccounts(accounts)\">\n        TODO: 8. route to detail view\n        <th><a href=\"/account/{{account.id}}\">{{account.id}}</a></th>\n        <td>{{account.balance}}</td>\n        <td>{{account.currency}}</td>\n      </tr>\n    </table>\n  </section>\n</div> -->"]},"metadata":{},"sourceType":"module"}